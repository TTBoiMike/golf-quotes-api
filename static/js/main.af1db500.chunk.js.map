{"version":3,"sources":["assets/loading.gif","components/quotes.js","components/filter.js","apiClient.js","components/about.js","components/App.js","reportWebVitals.js","index.js"],"names":["Quotes","buildQuoteContainer","props","quotes","map","quote","className","name","firstname","surname","src","Loader","height","style","display","this","length","alt","React","Component","Filters","state","tag","e","preventDefault","generateQuote","onChange","setState","currentTarget","value","id","type","onClick","handleSubmit","ApiClient","response","status","Promise","resolve","reject","Error","statusText","getRequest","url","fetch","then","catch","err","console","log","About","Jumbotron","href","to","Container","Table","striped","variant","App","componentDidMount","getQuote","data","json","newQuotes","Navbar","Brand","path","limit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1db500.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.696cd6cc.gif\";","import React from 'react'\r\nimport Loader from '../assets/loading.gif'\r\nimport '../App.css'\r\n\r\nclass Quotes extends React.Component {\r\n\r\n    buildQuoteContainer = () => {\r\n        return this.props.quotes.map((quote) => {\r\n            return <article className=\"quote-carousel text-light\">\r\n                    <p className=\"mb-3 quote-text\">\"{quote.quote}\"</p>\r\n                    <p className=\"spec-font\">{quote.name.firstname} {quote.name.surname}</p>\r\n                   </article>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"bg-masters quotes-container text-center rounded p-5 my-5\">\r\n                <img src={Loader} height=\"50px\" style={{display: this.props.quotes.length === 0 ? \"block\" : \"none\"}} alt=\"loading spinner\"/>\r\n                {this.buildQuoteContainer()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quotes","import React from 'react'\r\n\r\nclass Filters extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            tag: \"random\"\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.generateQuote(this.state.tag)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onChange={(e) => this.setState({tag: e.currentTarget.tag.value})}>\r\n                <div className=\"mb-5 width\">\r\n                    <select className=\"form-control\" name=\"tag\" id=\"tag\">\r\n                        <option value=\"random\">Random quotes</option>\r\n                        <option value=\"coach\">Coaching quotes</option>\r\n                        <option value=\"famous\">Famous quotes</option>\r\n                        <option value=\"funny\">Funny quotes</option>\r\n                        <option value=\"inspirational\">Inspirational quotes</option>\r\n                        <option value=\"player\">Player quotes</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-block width bg-masters text-light p-3\" onClick={(e) => this.handleSubmit(e)}>Random Quote</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filters","export class ApiClient {\r\n\r\n    status(response) {\r\n        if(response.status >= 200 && response.status < 300) {\r\n            return Promise.resolve(response)\r\n        } else {\r\n            return Promise.reject(new Error(response.statusText))\r\n        }\r\n    }\r\n\r\n    getQuote(tag) {\r\n        if(tag === \"random\") {\r\n           return this.getRequest(`https://golf-quotes-api.herokuapp.com/quotes/random`)\r\n        } else {\r\n            return this.getRequest(`https://golf-quotes-api.herokuapp.com/quotes/random/tag/${tag}`)\r\n        }\r\n    }\r\n\r\n    getRequest(url) {\r\n        return (fetch(url))\r\n        .then(this.status)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport {Jumbotron} from 'react-bootstrap'\r\nimport {Container} from 'react-bootstrap'\r\nimport {Table} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div>\r\n                <Jumbotron className=\"my-5\">\r\n                    <h2>About this project</h2>\r\n                    <p>\r\n                        'Golf is a Game of Quotes' is a project by <a href=\"https://www.awebdevnamedmike.co.uk\">a web dev named mike</a> using 50 of the greatest golf quotes of all time. \r\n                        If you play, follow or simply enjoy watching golf you may be familiar with a few of these phrases. If you haven't you'll definitely recognise who said them.\r\n                    </p>\r\n                    <p>\r\n                        This a custom REST API built using express and a simple UI built using React and Bootstrap to showcase random quotes about Golf: what Arnold Palmer descirbed as 'the greatest game mankind as ever invented.' \r\n                    </p>\r\n                    <Link to=\"/\">\r\n                        <button className=\"btn bg-masters text-light\">View</button>\r\n                    </Link>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <h5 className=\"mb-3\">Paths for - https://golf-quotes-api.herokuapp.com</h5>\r\n                    <Table striped variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <h6>All Quotes</h6>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes</p>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <Table striped variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <h6>All Quotes by Tag and/or Name</h6>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes?name=name</p>\r\n                            </tr>\r\n                             <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes?tag=tag</p>\r\n                            </tr>\r\n                             <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes?name=name&tag=tag</p>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <Table striped variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <h6>Random Quotes</h6>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes/random</p>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <Table striped variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <h6>Random Quotes by Tag</h6>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes/random/tag/:tag</p>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <Table striped variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <h6>Random Quotes by Name</h6>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes/random/name/:name</p>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <Table striped variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <h6>Random Quotes by Name and Tag</h6>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <p className=\"m-2\"><span className=\"text-danger font-weight-bold\">GET</span> /quotes/random/name/:name?tag=tag</p>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default About","import React from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\nimport {Navbar} from 'react-bootstrap'\nimport {Container} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Quotes from './quotes'\nimport Filters from './filter'\nimport {ApiClient} from '../apiClient'\nimport About from './about'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      quotes: []\n    }\n    this.ApiClient = new ApiClient()\n  }\n\n  componentDidMount = () => {\n    return this.generateQuote(\"random\")\n  }\n\n  generateQuote(tag) {\n    this.ApiClient.getQuote(tag)\n      .then(data => data.json().then(json => {\n        let newQuotes = [json]\n        this.setState({\n          quotes: newQuotes\n        })\n      }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Navbar className=\"bg-masters d-flex justify-content-between\">\n            <Container>\n              <Navbar.Brand className=\"text-light\">Golf is Game of Quotes</Navbar.Brand>\n              <Link to=\"/about\"><button className=\"btn text-light\">About</button></Link>\n            </Container>\n          </Navbar>\n          <Container>\n            <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/\">\n                <Quotes quotes={this.state.quotes}/>\n                <Filters generateQuote={(tag, limit) => this.generateQuote(tag, limit)}/>\n              </Route>\n            </Switch>\n          </Container>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}