{"version":3,"sources":["components/quotes.js","components/filter.js","apiClient.js","components/App.js","reportWebVitals.js","index.js"],"names":["Quotes","buildQuoteContainer","props","quotes","map","quote","Carousel","Item","className","interval","name","this","React","Component","Filters","state","tag","limit","e","preventDefault","generateQuote","currentTarget","value","setState","parseInt","onChange","setFilters","id","style","display","type","onClick","handleSubmit","ApiClient","response","status","Promise","resolve","reject","Error","statusText","getRequest","url","fetch","then","catch","err","console","log","App","componentDidMount","getQuote","data","json","newQuotes","Navbar","Brand","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAwBeA,G,kNAlBXC,oBAAsB,WAClB,OAAO,EAAKC,MAAMC,OAAOC,KAAI,SAACC,GAC1B,OAAO,eAACC,EAAA,EAASC,KAAV,CAAeC,UAAU,4BAA4BC,SAAU,IAA/D,UACC,oBAAGD,UAAU,kBAAb,cAAiCH,EAAMA,MAAvC,OACA,mBAAGG,UAAU,YAAb,SAA0BH,EAAMK,c,uDAM5C,OACI,cAACJ,EAAA,EAAD,CAAUE,UAAU,2DAApB,SACKG,KAAKV,4B,GAdDW,IAAMC,YCkDZC,E,kDAnDX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,IAAK,SACLC,MAAO,GAJD,E,yDAQDC,GACTA,EAAEC,iBACFR,KAAKT,MAAMkB,cAAcT,KAAKI,MAAMC,IAAKL,KAAKI,MAAME,S,iCAG7CC,GAC0B,WAA9BA,EAAEG,cAAcL,IAAIM,MACnBX,KAAKY,SAAS,CACVP,IAAKE,EAAEG,cAAcL,IAAIM,MACzBL,MAAO,IAGXN,KAAKY,SAAS,CACVP,IAAKE,EAAEG,cAAcL,IAAIM,MACzBL,MAAOO,SAASN,EAAEG,cAAcJ,MAAMK,W,+BAKxC,IAAD,OACL,OACI,uBAAMG,SAAU,SAACP,GAAD,OAAO,EAAKQ,WAAWR,IAAvC,UACI,sBAAKV,UAAU,cAAf,UACI,yBAAQA,UAAU,eAAeE,KAAK,MAAMiB,GAAG,MAA/C,UACI,wBAAQL,MAAM,SAAd,2BACA,wBAAQA,MAAM,QAAd,6BACA,wBAAQA,MAAM,SAAd,2BACA,wBAAQA,MAAM,QAAd,0BACA,wBAAQA,MAAM,OAAd,2BACA,wBAAQA,MAAM,gBAAd,qCAEJ,yBAAQM,MAA0B,WAAnBjB,KAAKI,MAAMC,IAAmB,CAACa,QAAS,QAAU,CAACA,QAAS,SAAUrB,UAAU,eAAeE,KAAK,QAAQiB,GAAG,QAA9H,UACI,wBAAQL,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,KAAd,6BAGR,wBAAQQ,KAAK,SAAStB,UAAU,0CAA0CuB,QAAS,SAACb,GAAD,OAAO,EAAKc,aAAad,IAA5G,+B,GA9CMN,IAAMC,WCFfoB,EAAb,+FAEWC,GACH,OAAGA,EAASC,QAAU,KAAOD,EAASC,OAAS,IACpCC,QAAQC,QAAQH,GAEhBE,QAAQE,OAAO,IAAIC,MAAML,EAASM,eANrD,+BAUaxB,EAAKC,GACV,MAAW,WAARD,EACOL,KAAK8B,WAAL,uDAEC9B,KAAK8B,WAAL,kEAA2EzB,EAA3E,kBAAwFC,MAd3G,iCAkBeyB,GACP,OAAQC,MAAMD,GACbE,KAAKjC,KAAKwB,QACVU,OAAM,SAAAC,GACHC,QAAQC,IAAIF,UAtBxB,KCgDeG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAOFC,kBAAoB,WAClB,OAAO,EAAK9B,cAAc,WAP1B,EAAKL,MAAQ,CACXZ,OAAQ,IAEV,EAAK8B,UAAY,IAAIA,EALT,E,0DAYAjB,EAAKC,GAAQ,IAAD,OACxB8B,QAAQC,IAAIhC,EAAKC,GACjBN,KAAKsB,UAAUkB,SAASnC,EAAKC,GAC1B2B,MAAK,SAAAQ,GAAI,OAAIA,EAAKC,OAAOT,MAAK,SAAAS,GAC7B,IAAIC,EAAS,YAAOD,GACpB,EAAK9B,SAAS,CACZpB,OAAQmD,Y,+BAKN,IAAD,OACP,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC+C,EAAA,EAAD,CAAQ/C,UAAU,aAAlB,SACE,cAAC+C,EAAA,EAAOC,MAAR,CAAchD,UAAU,aAAxB,sCAEF,eAACiD,EAAA,EAAD,WACE,cAAC,EAAD,CAAQtD,OAAQQ,KAAKI,MAAMZ,SAC3B,cAAC,EAAD,CAASiB,cAAe,SAACJ,EAAKC,GAAN,OAAgB,EAAKG,cAAcJ,EAAKC,gB,GAhCxDL,IAAMC,WCGT6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.544dd88a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Carousel} from 'react-bootstrap'\r\nimport '../App.css'\r\n\r\nclass Quotes extends React.Component {\r\n\r\n    buildQuoteContainer = () => {\r\n        return this.props.quotes.map((quote) => {\r\n            return <Carousel.Item className=\"quote-carousel text-light\" interval={5000}>\r\n                    <p className=\"mb-3 quote-text\">\"{quote.quote}\"</p>\r\n                    <p className=\"spec-font\">{quote.name}</p>\r\n                   </Carousel.Item>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Carousel className=\"bg-masters quotes-container text-center rounded p-5 my-5\">\r\n                {this.buildQuoteContainer()}\r\n            </Carousel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quotes","import React from 'react'\r\n\r\nclass Filters extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            tag: \"random\",\r\n            limit: 1\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.generateQuote(this.state.tag, this.state.limit)\r\n    }\r\n\r\n    setFilters(e) {\r\n        if(e.currentTarget.tag.value === \"random\") {\r\n            this.setState({\r\n                tag: e.currentTarget.tag.value,\r\n                limit: 1\r\n            })\r\n        } else {\r\n            this.setState({\r\n                tag: e.currentTarget.tag.value,\r\n                limit: parseInt(e.currentTarget.limit.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onChange={(e) => this.setFilters(e)}>\r\n                <div className=\"d-flex mb-5\">\r\n                    <select className=\"form-control\" name=\"tag\" id=\"tag\">\r\n                        <option value=\"random\">Random quotes</option>\r\n                        <option value=\"coach\">Coaching quotes</option>\r\n                        <option value=\"famous\">Famous quotes</option>\r\n                        <option value=\"funny\">Funny quotes</option>\r\n                        <option value=\"icon\">Iconic quotes</option>\r\n                        <option value=\"inspirational\">Inspirational quotes</option>\r\n                    </select>\r\n                    <select style={this.state.tag === \"random\" ? {display: \"none\"} : {display: \"block\"}} className=\"form-control\" name=\"limit\" id=\"limit\">\r\n                        <option value=\"1\">1 quote</option>\r\n                        <option value=\"5\">5 quotes</option>\r\n                        <option value=\"10\">10 quotes</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-block bg-masters text-light p-3\" onClick={(e) => this.handleSubmit(e)}>New Quote!</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filters","export class ApiClient {\r\n\r\n    status(response) {\r\n        if(response.status >= 200 && response.status < 300) {\r\n            return Promise.resolve(response)\r\n        } else {\r\n            return Promise.reject(new Error(response.statusText))\r\n        }\r\n    }\r\n\r\n    getQuote(tag, limit) {\r\n        if(tag === \"random\") {\r\n           return this.getRequest(`https://golf-quotes-api.herokuapp.com/quotes/random`)\r\n        } else {\r\n            return this.getRequest(`https://golf-quotes-api.herokuapp.com/quotes/random/tag/${tag}?limit=${limit}`)\r\n        }\r\n    }\r\n\r\n    getRequest(url) {\r\n        return (fetch(url))\r\n        .then(this.status)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n}\r\n","import React from 'react'\nimport {Navbar} from 'react-bootstrap'\nimport {Container} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Quotes from './quotes'\nimport Filters from './filter'\nimport {ApiClient} from '../apiClient'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      quotes: []\n    }\n    this.ApiClient = new ApiClient()\n  }\n\n  componentDidMount = () => {\n    return this.generateQuote(\"random\")\n  }\n\n  generateQuote(tag, limit) {\n    console.log(tag, limit)\n    this.ApiClient.getQuote(tag, limit)\n      .then(data => data.json().then(json => {\n        let newQuotes = [...json]\n        this.setState({\n          quotes: newQuotes\n        })\n      }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar className=\"bg-masters\">\n          <Navbar.Brand className=\"text-light\">Golf is Game of Quotes</Navbar.Brand>\n        </Navbar>\n        <Container>\n          <Quotes quotes={this.state.quotes}/>\n          <Filters generateQuote={(tag, limit) => this.generateQuote(tag, limit)}/>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}